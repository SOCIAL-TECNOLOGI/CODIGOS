<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estadística por preguntas: error vs aciertos</title>
    <style>
        body {
            text-align: center; /* Centra todo el contenido del body */
        }
        .grafico-container {
            width: 800px;
            height: 300px;
            margin: 20px auto;
        }

        #chartContainer {
            height: 100%;
            width: 100%;
        }

        .boton-container {
            margin-top: 20px;
            display: flex;
            justify-content: center;
        }

        .boton {
            margin: 0 5px;
            padding: 8px 16px;
            font-size: 16px;
            cursor: pointer;
            background-color: #6ca9d4; /* Azul moderno */
            color: white;
            border: none;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }

        .boton:hover {
            background-color: #f1d9a9; /* Color de fondo al pasar el ratón */
            color: black; /* Cambia el color del texto a negro */
        }

        #datos {
            width: 100%;
            height: 100px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table, th, td {
            border: 1px solid black;
            text-align: center;
            padding: 8px;
        }

        table tr:nth-child(even) {
            background-color: #f2f2f2; /* Color tenue para filas pares */
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Bibliotecas para generar y descargar archivos Excel -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    <!-- Biblioteca para capturar imágenes de elementos HTML -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
</head>
<body>
    <h1>Estadística por preguntas: errores vs aciertos</h1>
    <div class="grafico-container">
        <canvas id="chartContainer"></canvas>
    </div>
    
    <textarea id="datos" placeholder="Pega aquí los datos de la encuesta" disabled></textarea>
    <input type="file" id="archivoExcel" accept=".xlsx, .xls" onchange="leerArchivoExcel(event)">
    <div class="boton-container">
        <button class="boton" onclick="generarGrafico()">Generar Gráfico</button>
        <button class="boton" onclick="descargarGrafico()">Descargar Gráfico</button>
        <button class="boton" onclick="generarTablaResumen()">Generar Resumen</button>
        <button class="boton" onclick="descargarExcel()">Descargar Resumen</button>
        <button class="boton" onclick="limpiar()">Reiniciar</button>
    </div>

    <div id="tablaResumen"></div>

    <script>
        let myChart;

        function generarGrafico() {
            let datos;
            const datosTextArea = document.getElementById("datos").value;

            if (datosTextArea.trim() !== "") {
                datos = datosTextArea;
            } else {
                alert("No se han proporcionado datos para graficar.");
                return;
            }

            const lineas = datos.trim().split("\n");

            const encabezados = lineas[0].split("\t");
            const respuestasPorPregunta = new Array(30).fill(null).map(() => ({ correctas: 0, incorrectas: 0 }));
            const respuestasCorrectas = encabezados.filter((_, index) => index % 2 === 1);

            for (let i = 1; i < lineas.length; i++) {
                const respuestas = lineas[i].split("\t");
                for (let j = 0; j < 30; j++) {
                    const respuestaIndex = j * 2;
                    const respuesta = respuestas[respuestaIndex];
                    const respuestaCorrecta = respuestasCorrectas[j];
                    if (respuesta === respuestaCorrecta) {
                        respuestasPorPregunta[j].correctas++;
                    } else {
                        respuestasPorPregunta[j].incorrectas++;
                    }
                }
            }

            const labels = respuestasPorPregunta.map((_, index) => `Pregunta ${index + 1}`);
            const correctas = respuestasPorPregunta.map(r => r.correctas);
            const incorrectas = respuestasPorPregunta.map(r => r.incorrectas);

            const ctx = document.getElementById('chartContainer').getContext('2d');
            if (myChart instanceof Chart) {
                myChart.destroy();
            }
            myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Respuestas Correctas',
                            backgroundColor: '#7ebf80', // Verde pastel
                            data: correctas
                        },
                        {
                            label: 'Respuestas Incorrectas',
                            backgroundColor: '#f08080', // Rojo pastel
                            data: incorrectas
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            stacked: true
                        },
                        y: {
                            stacked: true
                        }
                    }
                }
            });
        }

        function generarTablaResumen() {
            let datos;
            const datosTextArea = document.getElementById("datos").value;

            if (datosTextArea.trim() !== "") {
                datos = datosTextArea;
            } else {
                alert("No se han proporcionado datos para generar el resumen.");
                return;
            }

            const lineas = datos.trim().split("\n");

            const encabezados = lineas[0].split("\t");
            const respuestasPorPregunta = new Array(30).fill(null).map(() => ({ correctas: 0, incorrectas: 0 }));
            const respuestasCorrectas = encabezados.filter((_, index) => index % 2 === 1);

            for (let i = 1; i < lineas.length; i++) {
                const respuestas = lineas[i].split("\t");
                for (let j = 0; j < 30; j++) {
                    const respuestaIndex = j * 2;
                    const respuesta = respuestas[respuestaIndex];
                    const respuestaCorrecta = respuestasCorrectas[j];
                    if (respuesta === respuestaCorrecta) {
                        respuestasPorPregunta[j].correctas++;
                    } else {
                        respuestasPorPregunta[j].incorrectas++;
                    }
                }
            }

            const resultados = [];

            respuestasPorPregunta.forEach((pregunta, index) => {
                const totalRespuestas = pregunta.correctas + pregunta.incorrectas;
                const porcentajeError = ((pregunta.incorrectas / totalRespuestas) * 100).toFixed(2);
                const porcentajeAcierto = ((pregunta.correctas / totalRespuestas) * 100).toFixed(2);

                resultados.push({
                    pregunta: `Pregunta ${index + 1}`,
                    porcentajeError: parseFloat(porcentajeError),
                    porcentajeAcierto: parseFloat(porcentajeAcierto)
                });
            });

            resultados.sort((a, b) => b.porcentajeError - a.porcentajeError);

            const tablaResumen = document.getElementById('tablaResumen');
            tablaResumen.innerHTML = '';

            const table = document.createElement('table');
            const header = table.createTHead();
            const row = header.insertRow();
            const headers = ['Pregunta', 'Porcentaje de Error', 'Porcentaje de Acierto'];

            headers.forEach(headerText => {
                const th = document.createElement('th');
                th.textContent = headerText;
                row.appendChild(th);
            });

            const tbody = table.createTBody();
            resultados.forEach(item => {
                const tr = document.createElement('tr');
                const tdPregunta = document.createElement('td');
                tdPregunta.textContent = item.pregunta;
                const tdError = document.createElement('td');
                tdError.textContent = `${item.porcentajeError}%`;
                const tdAcierto = document.createElement('td');
                tdAcierto.textContent = `${item.porcentajeAcierto}%`;

                tr.appendChild(tdPregunta);
                tr.appendChild(tdError);
                tr.appendChild(tdAcierto);
                tbody.appendChild(tr);
            });

            tablaResumen.appendChild(table);
        }

        function descargarExcel() {
            let datos;
            const datosTextArea = document.getElementById("datos").value;

            if (datosTextArea.trim() !== "") {
                datos = datosTextArea;
            } else {
                alert("No se han proporcionado datos para descargar el resumen.");
                return;
            }

            const lineas = datos.trim().split("\n");

            const encabezados = lineas[0].split("\t");
            const respuestasPorPregunta = new Array(30).fill(null).map(() => ({ correctas: 0, incorrectas: 0 }));
            const respuestasCorrectas = encabezados.filter((_, index) => index % 2 === 1);

            for (let i = 1; i < lineas.length; i++) {
                const respuestas = lineas[i].split("\t");
                for (let j = 0; j < 30; j++) {
                    const respuestaIndex = j * 2;
                    const respuesta = respuestas[respuestaIndex];
                    const respuestaCorrecta = respuestasCorrectas[j];
                    if (respuesta === respuestaCorrecta) {
                        respuestasPorPregunta[j].correctas++;
                    } else {
                        respuestasPorPregunta[j].incorrectas++;
                    }
                }
            }

            const resultados = [];

            respuestasPorPregunta.forEach((pregunta, index) => {
                const totalRespuestas = pregunta.correctas + pregunta.incorrectas;
                const porcentajeError = `${((pregunta.incorrectas / totalRespuestas) * 100).toFixed(2)}%`;
                const porcentajeAcierto = `${((pregunta.correctas / totalRespuestas) * 100).toFixed(2)}%`;

                resultados.push({
                    pregunta: `Pregunta ${index + 1}`,
                    porcentajeError,
                    porcentajeAcierto
                });
            });

            resultados.sort((a, b) => b.porcentajeError.localeCompare(a.porcentajeError));

            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(resultados);
            const wscols = [
                { wch: 20 }, // Ancho de columna para la pregunta
                { wch: 20 }, // Ancho de columna para porcentaje de error
                { wch: 20 }  // Ancho de columna para porcentaje de acierto
            ];
            ws['!cols'] = wscols;
            XLSX.utils.book_append_sheet(wb, ws, 'Tabla Resumen');

            const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

            function s2ab(s) {
                const buf = new ArrayBuffer(s.length);
                const view = new Uint8Array(buf);
                for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
                return buf;
            }

            saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), 'tabla_resumen_encuesta.xlsx');
        }

        function descargarGrafico() {
            const canvas = document.getElementById('chartContainer');
            const imageURL = canvas.toDataURL("image/png");
            const link = document.createElement('a');
            link.href = imageURL;
            link.download = 'grafico_encuesta.png';
            link.click();
        }

        function limpiar() {
            document.getElementById("datos").value = "";
            document.getElementById("archivoExcel").value = "";
            const ctx = document.getElementById('chartContainer').getContext('2d');
            if (myChart instanceof Chart) {
                myChart.destroy();
            }
            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
            document.getElementById('tablaResumen').innerHTML = '';
        }

        function leerArchivoExcel(event) {
            const archivo = event.target.files[0];
            const lector = new FileReader();

            lector.onload = function(e) {
                const contenido = e.target.result;
                const workbook = XLSX.read(contenido, { type: "binary" });
                const firstSheetName = workbook.SheetNames[0];
                const worksheet = workbook.Sheets[firstSheetName];
                const datos = XLSX.utils.sheet_to_csv(worksheet, { FS: '\t' });

                // Mostrar los datos en el textarea (opcional)
                document.getElementById("datos").value = datos;

                // Generar el gráfico con los datos del archivo
                generarGrafico();
            };

            lector.readAsBinaryString(archivo);
        }
    </script>
</body>
</html>
